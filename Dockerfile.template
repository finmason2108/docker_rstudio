FROM rocker/%%CONTAINER_TYPE%%:3.6.2
MAINTAINER "Milos Kozak" mkozak@finmason.com

# Place static files
COPY *.R /tmp/
COPY Packages_*.py* /tmp/
COPY sss_client.pam /etc/pam.d/sss_client
COPY entrypoint.sh /entrypoint.sh

# Install software allowing integration with base OS
RUN BUILDDEPS="libpq-dev libssl-dev libpcre3-dev libbz2-dev liblzma-dev zlib1g-dev libicu-dev libxml2-dev libcurl4-openssl-dev python-dev libpng-dev" \
    && apt-get update && apt-get install -y --no-install-recommends \
        libnss-sss \
        libpam-sss \
        openssh-client \
        sssd \
        awscli \
        postgresql-client \
        openjdk-11-jdk \
        wget \
        libcurl4-openssl-dev \
        netcat \
        xsltproc \
        ${BUILDDEPS} \
    # Install R packages
    && R CMD javareconf \
    && cat /tmp/Install_versions.R /tmp/Packages_*.R > /tmp/install.R && \
    Rscript /tmp/install.R \
    # Install python deps
    && ls /tmp/Packages_*.py2 && (apt-get install --no-install-recommends -y python-pip python-setuptools python-wheel && cat /tmp/Packages_*.py2 > /tmp/py2 | pip install -r /tmp/py2) || /bin/true \
    && ls /tmp/Packages_*.py3 && (apt install --no-install-recommends -y python3-pip python3-setuptools python3-wheel && cat /tmp/Packages_*.py3 > /tmp/py3 | pip3 install -r /tmp/py3) || /bin/true \
    # Final permissions and folders
    && mkdir -p /home/ta_analytics \
    && chown 10000:10000 /home/ta_analytics \
    # Clean caches
    && apt-get purge -y $BUILDDEPS \
    && apt-get install -y libpq5 libxml2\
    && apt-get autoremove -y \
    && apt-get autoclean -y \
    && rm -rf /var/lib/apt/lists/* \
    # Test all R packages are installed \
    && cat /tmp/Test_packages.R /tmp/Packages_*.R | sed 's/install.versions(/testpackage(df, /g' | R \
    && cat /tmp/Test_packages.R /tmp/Packages_*.R | sed 's/install.versions(/testpackageExit(df, /g' | R 

### Hazelcast layer
RUN echo deb http://deb.debian.org/debian buster-backports main >> /etc/apt/sources.list \
    && apt update \
    && apt install zlib1g-dev bzip2 cmake/buster-backports g++ wget -y

# Boost
RUN wget https://boostorg.jfrog.io/artifactory/main/release/1.75.0/source/boost_1_75_0.tar.bz2 -q\
    && tar xvf /boost_1_75_0.tar.bz2\
    && cd boost_1_75_0 \
    && ./bootstrap.sh \
    && ./b2 cxxflags=-fPIC -a --with-thread --with-chrono install \
    && cd .. && rm -rf boost_1_75_0 boost_1_75_0.tar.bz2

# HZ Cpp client
RUN wget https://github.com/hazelcast/hazelcast-cpp-client/archive/v4.0.1.tar.gz -q
RUN tar xvf /v4.0.1.tar.gz\
    && cd hazelcast-cpp-client-4.0.1\
    && mkdir build\
    && cd build\
    && cmake .. -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=-fPIC -DCMAKE_INSTALL_PREFIX=/home/hz\
    && cmake --build . --config Release\
    && cmake --build . --target install --config Release

# R-Cpp bridge  
RUN wget https://github.com/znevrly/R-Hazelcast-c-package/archive/refs/heads/master.zip 
RUN unzip master.zip\
    && cd  R-Hazelcast-c-package-master/\
    && cp /usr/local/lib/libboost_thread.a hz-libs/lib/\
    && cp /usr/local/lib/libboost_chrono.a hz-libs/lib/\
    && cp /home/hz/lib/libhazelcast-cpp-client.a hz-libs/lib/\
    && R CMD INSTALL .

# OPS-1324
ENTRYPOINT ["/bin/sh", "/entrypoint.sh"]
CMD = ["/bin/bash"]
